spring:
  application:
    name: passenger
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5435/passengers}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        batch_size: 50
        fetch_size: 50
        show_sql: true
        format_sql: true
        hdm2ddl:
          auto: validate
        check_nullability: true
    open-in-view: false
  liquibase:
    change-log: db/changelog/db.changelog-master.xml
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: taxi_client
            scope:
              - openid
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8484/realms/taxi_realm}
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8484/realms/taxi_realm}

server:
  port: 8082
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
  instance:
    metadataMap:
      "prometheus.scrape": "true"
      "prometheus.path": "/actuator/prometheus"
      "prometheus.port": "8082"

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  tracing:
    sampling:
      probability: 1
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_TRACING_ENDPOINT}

logging:
  config: classpath:logback.xml